ADD A PROPERTY BINDING TO A COMPONENT'S TEMPLATE
THEORY/SUMMARY:
Summary: In this lesson, you added a new property binding and passed in a reference to a class property.
Now, the HousingLocationComponent has access to data that it can use to customize the component's display.
This tutorial lesson demonstrates how to add property binding to a template and use it to pass dynamic data to components.
What you'll learn:
-Your app has data bindings in the HomeComponent template.
-Your app sends data from the HomeComponent to the HousingLocationComponent.

CONCEPTUAL PREVIEW OF INPUTS
In this lesson, you'll continue the process of sharing data from the parent component to the child component
by binding data to those properties in the template using property binding.
Property binding enables you to connect a variable to an Input in an Angular template.
The data is then dynamically bound to the Input.
For a more in depth explanation, please refer to the Property binding guide.

PRACTICE:
1. Update the HomeComponent template
A. This step adds property binding to the <app-housing-location> tag.
B. In the code editor:
C. Navigate to src/app/home/home.component.ts
D. In the template property of the @Component decorator, update the code to match the code below:
E. Add housingLocation property binding
<section class="results">
    <app-housing-location [housingLocation]="housingLocation"></app-housing-location>
</section>
2. When adding a property binding to a component tag, we use the [attribute] = "value" syntax to notify Angular 
A. ... that the assigned value should be treated as a property from the component class and not a string value.
3. The value on the right-hand side is the name of the property from the HomeComponent.
4. Confirm the code still works:
A. Save your changes and confirm the app does not have any errors.
B. Correct any errors before you continue to the next step.
5. For more information about the topics covered in this lesson, visit:
A. Property binding
